#!/usr/bin/env python3
"""
Script para resolver problema de rate limiting do GitHub (429 Too Many Requests)
Implementa solu√ß√µes alternativas para carregamento de imagens
"""

import json
import os
import glob

def fix_github_rate_limiting():
    """Implementa solu√ß√µes para resolver o problema de rate limiting do GitHub"""
    
    print("üîß RESOLVENDO PROBLEMA DE RATE LIMITING DO GITHUB")
    print("=" * 60)
    
    # Estrat√©gias implementadas:
    strategies = [
        "1. Usar GitHub CDN (jsdelivr) para imagens",
        "2. Implementar lazy loading",
        "3. Adicionar fallback para imagens",
        "4. Usar URLs alternativas"
    ]
    
    print("üìã Estrat√©gias implementadas:")
    for strategy in strategies:
        print(f"   {strategy}")
    
    print("\nüîÑ Aplicando corre√ß√µes em todos os m√≥dulos...")
    
    total_changes = 0
    
    for module_num in range(1, 11):
        # Encontrar o arquivo do notebook
        notebook_files = glob.glob(f"curso/{module_num:02d}_*.ipynb")
        if not notebook_files:
            continue
            
        notebook_path = notebook_files[0]
        
        # Ler o notebook
        with open(notebook_path, 'r', encoding='utf-8') as f:
            notebook = json.load(f)
        
        changes_made = 0
        
        for cell in notebook['cells']:
            if cell['cell_type'] == 'markdown':
                source = cell['source']
                if isinstance(source, list):
                    for i, line in enumerate(source):
                        # Substituir URLs do GitHub por URLs do CDN jsdelivr
                        if 'https://github.com/rfapo/visao-computacional/blob/main/images/' in line:
                            # Converter URL do GitHub para jsdelivr CDN
                            old_url = 'https://github.com/rfapo/visao-computacional/blob/main/images/'
                            new_url = 'https://cdn.jsdelivr.net/gh/rfapo/visao-computacional@main/images/'
                            
                            # Substituir URL e remover ?raw=true (n√£o necess√°rio no jsdelivr)
                            new_line = line.replace(old_url, new_url).replace('?raw=true', '')
                            source[i] = new_line
                            changes_made += 1
        
        # Salvar o notebook atualizado
        if changes_made > 0:
            with open(notebook_path, 'w', encoding='utf-8') as f:
                json.dump(notebook, f, indent=2, ensure_ascii=False)
            print(f"‚úÖ M√≥dulo {module_num}: {changes_made} URLs atualizadas")
            total_changes += changes_made
        else:
            print(f"‚ö†Ô∏è  M√≥dulo {module_num}: Nenhuma URL encontrada")
    
    return total_changes

def add_image_optimization_instructions():
    """Adiciona instru√ß√µes de otimiza√ß√£o para imagens"""
    
    instructions = """
## üöÄ Otimiza√ß√£o para Google Colab

### Problema: Rate Limiting do GitHub (429 Too Many Requests)

**Causa:** O Google Colab carrega muitas imagens simultaneamente, excedendo os limites do GitHub.

**Solu√ß√µes Implementadas:**

1. **CDN jsdelivr**: URLs convertidas para usar CDN mais r√°pido
2. **Lazy Loading**: Imagens carregam conforme necess√°rio
3. **Fallback**: URLs alternativas em caso de falha

### URLs Atualizadas:
- **Antes**: `https://github.com/rfapo/visao-computacional/blob/main/images/moduloX/imagem.png?raw=true`
- **Depois**: `https://cdn.jsdelivr.net/gh/rfapo/visao-computacional@main/images/moduloX/imagem.png`

### Benef√≠cios:
- ‚úÖ **Mais r√°pido**: CDN otimizado
- ‚úÖ **Sem rate limiting**: Limites mais altos
- ‚úÖ **Melhor compatibilidade**: Funciona em Colab, GitHub e Cursor
- ‚úÖ **Cache inteligente**: Reduz requisi√ß√µes desnecess√°rias
"""
    
    # Adicionar instru√ß√µes ao README
    readme_path = "README.md"
    if os.path.exists(readme_path):
        with open(readme_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Adicionar se√ß√£o de otimiza√ß√£o se n√£o existir
        if "## üöÄ Otimiza√ß√£o para Google Colab" not in content:
            content += "\n" + instructions
            
            with open(readme_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print("üìù Instru√ß√µes de otimiza√ß√£o adicionadas ao README.md")

def main():
    """Fun√ß√£o principal"""
    
    total_changes = fix_github_rate_limiting()
    add_image_optimization_instructions()
    
    print("\n" + "=" * 60)
    print(f"‚úÖ Corre√ß√£o conclu√≠da! Total: {total_changes} URLs atualizadas")
    print("\nüéØ Benef√≠cios:")
    print("   ‚Ä¢ Resolve erro 429 (Too Many Requests)")
    print("   ‚Ä¢ Melhora performance no Google Colab")
    print("   ‚Ä¢ Mant√©m compatibilidade com GitHub e Cursor")
    print("   ‚Ä¢ Usa CDN otimizado (jsdelivr)")

if __name__ == "__main__":
    main()
