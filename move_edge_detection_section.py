#!/usr/bin/env python3
"""
Script para mover a se√ß√£o 1.5 Demonstra√ß√£o Pr√°tica: T√©cnicas de Detec√ß√£o de Bordas
do M√≥dulo 1 para o M√≥dulo 2
"""

import json
import os

def move_edge_detection_section():
    """Move a se√ß√£o de detec√ß√£o de bordas do M√≥dulo 1 para o M√≥dulo 2"""
    
    print("üîÑ MOVENDO SE√á√ÉO DE DETEC√á√ÉO DE BORDAS DO M√ìDULO 1 PARA O M√ìDULO 2")
    print("=" * 70)
    
    # Ler M√≥dulo 1
    with open('curso/01_introducao_historia_visao_computacional.ipynb', 'r', encoding='utf-8') as f:
        module1 = json.load(f)
    
    # Ler M√≥dulo 2
    with open('curso/02_processamento_digital_imagem_fundamentos.ipynb', 'r', encoding='utf-8') as f:
        module2 = json.load(f)
    
    # Encontrar e extrair a se√ß√£o 1.5 do M√≥dulo 1
    cells_to_move = []
    cells_to_remove = []
    
    for i, cell in enumerate(module1['cells']):
        if cell['cell_type'] == 'markdown':
            source = cell['source']
            if isinstance(source, list) and len(source) > 0:
                # Verificar se √© a se√ß√£o 1.5
                if '1.5 Demonstra√ß√£o Pr√°tica: T√©cnicas de Detec√ß√£o de Bordas' in source[0]:
                    # Marcar para mover todas as c√©lulas a partir desta
                    cells_to_move = module1['cells'][i:]
                    cells_to_remove = list(range(i, len(module1['cells'])))
                    break
    
    if not cells_to_move:
        print("‚ùå Se√ß√£o 1.5 n√£o encontrada no M√≥dulo 1")
        return
    
    print(f"‚úì Encontrada se√ß√£o 1.5 no M√≥dulo 1 ({len(cells_to_move)} c√©lulas)")
    
    # Remover c√©lulas do M√≥dulo 1
    for i in reversed(cells_to_remove):
        del module1['cells'][i]
    
    print(f"‚úì Removidas {len(cells_to_remove)} c√©lulas do M√≥dulo 1")
    
    # Modificar o t√≠tulo da se√ß√£o para o M√≥dulo 2
    for cell in cells_to_move:
        if cell['cell_type'] == 'markdown':
            source = cell['source']
            if isinstance(source, list):
                for i, line in enumerate(source):
                    if '1.5 Demonstra√ß√£o Pr√°tica: T√©cnicas de Detec√ß√£o de Bordas' in line:
                        source[i] = line.replace('1.5', '2.8')
                        print("‚úì T√≠tulo da se√ß√£o atualizado para 2.8")
                    elif 'images/modulo1/fotografo.png' in line:
                        source[i] = line.replace('images/modulo1/', 'images/modulo2/')
                        print("‚úì Caminho da imagem atualizado para modulo2")
    
    # Adicionar c√©lulas ao M√≥dulo 2
    module2['cells'].extend(cells_to_move)
    print(f"‚úì Adicionadas {len(cells_to_move)} c√©lulas ao M√≥dulo 2")
    
    # Salvar m√≥dulos atualizados
    with open('curso/01_introducao_historia_visao_computacional.ipynb', 'w', encoding='utf-8') as f:
        json.dump(module1, f, indent=2, ensure_ascii=False)
    
    with open('curso/02_processamento_digital_imagem_fundamentos.ipynb', 'w', encoding='utf-8') as f:
        json.dump(module2, f, indent=2, ensure_ascii=False)
    
    print("‚úÖ Movimenta√ß√£o conclu√≠da com sucesso!")
    print("\nüìã Resumo das mudan√ßas:")
    print("   ‚Ä¢ Se√ß√£o 1.5 removida do M√≥dulo 1")
    print("   ‚Ä¢ Se√ß√£o 2.8 adicionada ao M√≥dulo 2")
    print("   ‚Ä¢ T√≠tulo atualizado: '2.8 Demonstra√ß√£o Pr√°tica: T√©cnicas de Detec√ß√£o de Bordas'")
    print("   ‚Ä¢ Caminho da imagem atualizado para modulo2")

def main():
    """Fun√ß√£o principal"""
    
    move_edge_detection_section()
    
    print("\nüéØ Benef√≠cios da movimenta√ß√£o:")
    print("   ‚Ä¢ Conte√∫do mais apropriado no M√≥dulo 2 (Processamento Digital)")
    print("   ‚Ä¢ M√≥dulo 1 focado em introdu√ß√£o e hist√≥ria")
    print("   ‚Ä¢ Melhor organiza√ß√£o pedag√≥gica")
    print("   ‚Ä¢ Demonstra√ß√£o pr√°tica no contexto correto")

if __name__ == "__main__":
    main()
